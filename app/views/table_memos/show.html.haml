- content_for :title, "#{@table_memo.name} Â« Table"
- content_for :header do
  %h1.page-header
    = @table_memo.name
    - favorited_status = @table_memo.favorited_by?(current_user) ? "favorited" : "unfavorited"
    %span.favorite-table-block{ class: favorited_status }
      = link_to table_memo_favorite_table_path(@table_memo.id), method: :delete, remote: true, class: "unfavorite-table-link" do
        %i.fa.fa-star
      = link_to table_memo_favorite_table_path(@table_memo.id), method: :post, remote: true, class: "favorite-table-link" do
        %i.fa.fa-star-o
    = link_to edit_table_memo_path(@table_memo) do
      %i.fa.fa-edit

  - unless @table_memo.linked?
    .box.box-warning
      .box-header
        %h4
          %i.fa.fa-warning= t("unlinked_table")
      .box-body
        = link_to "Delete table information", @table_memo,
          method: :delete,
          class: "btn btn-lg btn-danger",
          data: { confirm: "Delete table #{@table_memo.name} information?" }

  %ul.breadcrumb
    %li
      = link_to root_path do
        %i.fa.fa-home
        Home
    %li
      = link_to @table_memo.database_memo.name, database_memo_path(@table_memo.database_memo.name)
    - unless @table_memo.database_memo.single_schema?
      %li
        = link_to @table_memo.schema_memo.name, database_schema_path(@table_memo.database_memo.name, @table_memo.schema_memo.name)
    %li.active
      = @table_memo.name

.memo-block.box.box-info.with-border
  .box-body
    .markdown-block
      - if @table_memo.description.present?
        = @table_memo.description_html
      - else
        = t("no_description")
  .box-footer
    = l(@table_memo.updated_at)
    - if @table_memo.logs.exists?
      = link_to table_memo_logs_path(@table_memo.id) do
        %i.fa.fa-clock-o

.box
  .box-header
    %h3.box-title Schema
  .box-body
    %table.table.table-hover.table-bordered.table-striped{ role: "grid" }
      %tr
        %th Name
        %th Description
        %th Sql Type
        %th Default Value
        %th Nullable
      = render partial: "column_memo", collection: @table_memo.column_memos.sort_by(&:display_order)

- if @view_meta_data
  = render partial: "view_meta_data"
- else
  = render partial: "raw_dataset"
