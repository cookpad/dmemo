- content_for :title, "#{@schema_memo.name} Â« Schema"
- content_for :header do
  .row.mb-2
    .col
      %h1.m-0.text-nowrap
        = @schema_memo.name
        = link_to edit_schema_memo_path(@schema_memo) do
          %i.fas.fa-pen-to-square

    .col
      %ol.breadcrumb.float-sm-right
        %li.breadcrumb-item
          = link_to root_path do
            %i.fas.fa-home
            Home
        %li.breadcrumb-item
          = link_to @schema_memo.database_memo.name, database_memo_path(@schema_memo.database_memo.name)
        %li.breadcrumb-item.active
          = @schema_memo.name

  - unless @schema_memo.linked?
    .row.mb-2
      .col
        .card.card-warning
          .card-header
            %h4.card-title
              %i.fas.fa-triangle-exclamation
              = t("unlinked_schema")
          .card-body
            = link_to "Delete schema information", @schema_memo,
              method: :delete,
              class: "btn btn-lg btn-danger",
              data: { confirm: "Delete database #{@schema_memo.name} information?" }

.memo-block.card
  .card-body
    .markdown-block
      - if @schema_memo.description.present?
        = @schema_memo.description_html
      - else
        = t("no_description")
  .card-footer
    = l(@schema_memo.updated_at)
    - if @schema_memo.logs.exists?
      = link_to schema_memo_logs_path(@schema_memo.id) do
        %i.far.fa-clock

.card
  .card-header
    %h2.card-title Tables

  .card-body.p-0
    .table-responsive
      %table.table.table-hover.table-bordered.table-striped{ role: "grid" }
        %thead
          %tr
            %th.col-4 Name
            %th Description
        %tbody
          = render partial: "table_memo", collection: @schema_memo.table_memos.sort_by(&:display_order)
